{"version":3,"sources":["Weatherard.jsx","App.js","index.js"],"names":["Weatherard","tempinfo","useState","tempstatus","settempstatus","temp","weathermood","name","speed","country","temp_min","temp_max","useEffect","className","class","App","searchvalue","setsearchvalue","settempinfo","getinfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","id","autoFocus","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA4DeA,MA1Df,YAAmC,IAAbC,EAAY,EAAZA,SACpB,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACQC,EAAgEJ,EAAhEI,KAAMC,EAA0DL,EAA1DK,YAAaC,EAA6CN,EAA7CM,KAAMC,EAAuCP,EAAvCO,MAAOC,EAAgCR,EAAhCQ,QAASC,EAAuBT,EAAvBS,SAAUC,EAAaV,EAAbU,SAsC3D,OApCAC,qBAAU,WACR,GAAIN,EACF,OAAQA,GACN,IAAK,SAwBL,IAAK,aAAcF,EAAc,gBAC/B,MAvBF,IAAK,OAgBL,IAAK,QAASA,EAAc,eAC1B,MASF,QAAQA,EAAc,cACpB,MAvBF,IAAK,OAAQA,EAAc,qBACzB,MAGF,IAAK,WAAYA,EAAc,yBAC7B,MACF,IAAK,kBAAmBA,EAAc,oBACpC,MACF,IAAK,UAAWA,EAAc,8BAC5B,MACF,IAAK,QAIL,IAAK,eAAgBA,EAAc,oBACjC,MACF,IAAK,OAAQA,EAAc,oBACzB,MAGF,IAAK,OAAQA,EAAc,kBAM9B,CAACE,IAEF,mCACE,sBAAKO,UAAU,MAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,eACf,oBAAIA,UAAU,WAAd,SAAyB,mBAAGC,MAAK,UAAKX,OACtC,sBAAKU,UAAU,cAAf,UACE,qBAAIA,UAAU,WAAd,UAAyB,mBAAGC,MAAM,0BAAlC,IAAgEP,EAAhE,KAAwEE,KACxE,qBAAII,UAAU,aAAd,UAA4BR,EAA5B,kBAAoDC,KACpD,qBAAIO,UAAU,OAAd,oBAA6BL,EAA7B,WACA,qBAAIK,UAAU,SAAd,mBAA8BH,EAA9B,gBAAuDC,cCLlDI,MA7Cf,WAAgB,IAAD,EACb,EAAsCb,mBAAS,OAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAgCf,mBAAS,IAAzC,mBAAOD,EAAP,KAAiBiB,EAAjB,KAEMC,EAAO,uCAAG,8CAAAC,EAAA,sEAERC,EAFQ,4DAEmDL,EAFnD,iEAIMM,MAAMD,GAJZ,cAINE,EAJM,gBAKOA,EAAIC,OALX,OAKNC,EALM,OAOJpB,EAASoB,EAAKC,KAAdrB,KACMC,EAAgBmB,EAAKE,QAAQ,GAAnCD,KACAnB,EAASkB,EAATlB,KACAC,EAAUiB,EAAKG,KAAfpB,MACAC,EAAYgB,EAAKI,IAAjBpB,QACAC,EAAae,EAAKC,KAAlBhB,SACAC,EAAac,EAAKC,KAAlBf,SAGRO,EADuB,CAAEb,OAAMC,cAAaC,OAAMC,QAAOC,UAASC,WAAUC,aAfhE,kDAkBZmB,QAAQC,IAAR,MAlBY,0DAAH,qDAyBb,OAHAnB,qBAAU,WACRO,MACC,IAED,mCACE,sBAAKN,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UAA0B,mBAAGA,UAAU,qBAAvC,8BAA6F,mBAAGA,UAAU,wBAC1G,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOA,UAAU,QAAQmB,KAAK,SAASC,YAAY,sBAAsBC,GAAG,SAASC,WAAS,EAACC,MAAOpB,EAAaqB,SAAU,SAACC,GAAD,OAAOrB,EAAeqB,EAAEC,OAAOH,UAC5J,2BAAQvB,UAAU,OAAlB,0BAAkC,OAAlC,wBAAiDM,GAAjD,0CAEF,cAAC,EAAD,CAAYlB,SAAUA,aCpChCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f6dcc76.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction Weatherard({ tempinfo }) {\r\n  const [tempstatus, settempstatus] = useState()\r\n  const { temp, weathermood, name, speed, country, temp_min, temp_max } = tempinfo;\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case 'Clouds': settempstatus('fas fa-cloud')\r\n          break;\r\n        case 'Haze': settempstatus('fas fa-smog')\r\n          break;\r\n        case 'Sunny': settempstatus('fas fa-sun')\r\n          break;\r\n        case 'Rain': settempstatus('fas fa-cloud-rain')\r\n          break;\r\n        case 'Clear': settempstatus('fas fa-sun')\r\n          break;\r\n        case 'Overcast': settempstatus('fas fa-cloud-sun-rain')\r\n          break;\r\n        case 'Partially cloud': settempstatus('fas fa-cloud-sun')\r\n          break;\r\n        case 'Drizzle': settempstatus('fas fa-cloud-showers-heavy')\r\n          break;\r\n        case 'Storm': settempstatus('fas fa-poo-storm')\r\n          break;\r\n        case 'Smoke': settempstatus('fas fa-smog')\r\n          break;\r\n        case 'Thunderstorm': settempstatus('fas fa-poo-storm')\r\n          break;\r\n        case 'Snow': settempstatus('fas fa-snowflake')\r\n          break;\r\n        case 'Atmosphere': settempstatus('fas fa-cloud')\r\n          break;\r\n        case 'Moon': settempstatus('fas fa-moon')\r\n          break;\r\n        default:settempstatus('fas fa-sun')\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood])\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div className=\"wave one\"></div>\r\n        <div className=\"wave two\"></div>\r\n        <div className=\"wave three\"></div>\r\n        <h1 className=\"templogo\"><i class={`${tempstatus}`}></i></h1>\r\n        <div className=\"weatherinfo\">\r\n          <h3 className=\"location\"><i class=\"fas fa-map-marker-alt\"></i> {name}, {country}</h3>\r\n          <h1 className=\"temprature\">{temp} &deg; C , &nbsp; {weathermood}</h1>\r\n          <h3 className=\"wind\">WIND : {speed} km/h</h3>\r\n          <h3 className=\"minmax\">MIN : {temp_min}, &nbsp; MAX : {temp_max}</h3>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Weatherard\r\n","import React, { useState, useEffect } from 'react'\nimport Weatherard from './Weatherard'\n\nfunction App() {\n  const [searchvalue, setsearchvalue] = useState(\"goa\")\n  const [tempinfo, settempinfo] = useState({})\n\n  const getinfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchvalue}&units=metric&appid=3b5b770eb1c757c9294345a09164e446`;\n\n      const res = await fetch(url)\n      const data = await res.json()\n      // console.log(data);\n      const { temp } = data.main;\n      const { main: weathermood } = data.weather[0];\n      const { name } = data;\n      const { speed } = data.wind;\n      const { country } = data.sys;\n      const { temp_min } = data.main\n      const { temp_max } = data.main\n\n      const newweatherinfo = { temp, weathermood, name, speed, country, temp_min, temp_max }\n      settempinfo(newweatherinfo)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getinfo();\n  }, [])\n  return (\n    <>\n      <div className=\"mdiv\">\n        <h1 className=\"titelname\"><i className=\"far fa-snowflake\"></i>&nbsp; AK Global Weather &nbsp;<i className=\"far fa-snowflake\"></i></h1>\n        <div className=\"cdiv\">\n          <div className=\"inputbtn\">\n            <input className=\"input\" type=\"search\" placeholder=\"Enter Your Location\" id=\"search\" autoFocus value={searchvalue} onChange={(e) => setsearchvalue(e.target.value)} />\n            <button className=\"btn\" className=\"btn\" onClick={getinfo}>Search</button>\n          </div>\n          <Weatherard tempinfo={tempinfo} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}